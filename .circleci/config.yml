version: 2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.9
    
    steps:
      - checkout
      
      # Create a virtual environment and install dependencies
      - run:
          name: Install Dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install pyinstaller
      
      # Generate version information
      - run:
          name: Generate Version
          command: |
            # Create a version file with timestamp and git commit
            mkdir -p artifacts/version
            echo "Build Timestamp: $(date)" > artifacts/version/build_info.txt
            echo "Git Commit: $(git rev-parse HEAD)" >> artifacts/version/build_info.txt
            echo "Branch: $CIRCLE_BRANCH" >> artifacts/version/build_info.txt
      
      # Run tests
      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
            mkdir -p test-results
            pytest tests/ --junitxml=test-results/junit.xml
      
      # Build executable with versioned naming
      - run:
          name: Build Executable
          command: |
            . venv/bin/activate
            # Create dist directory if it doesn't exist
            mkdir -p dist
            
            # Generate version-specific executable name
            VERSION=$(date +"%Y%m%d-%H%M%S")
            EXECUTABLE_NAME="hello-world-$VERSION"
            
            # Build executable with versioned name
            pyinstaller --onefile src/hello.py --name "$EXECUTABLE_NAME"
      
      # Store version information as artifacts
      - store_artifacts:
          path: artifacts/version
          destination: version-info
      
      # Store test reports as artifacts
      - store_artifacts:
          path: test-results
          destination: test-reports
      
      # Store executables as artifacts
      - store_artifacts:
          path: dist/
          destination: executables
      
      # Store test results for CircleCI test summary
      - store_test_results:
          path: test-results

workflows:
  version: 2
  build-and-store-versions:
    jobs:
      - build-and-test